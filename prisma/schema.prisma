// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int                 @id @default(autoincrement())
  username     String              @unique
  passwordHash String
  messages     Message[]
  chats        ChatParticipants[]
  groups       GroupParticipants[]
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
}

model Chat {
  id           Int                @id @default(autoincrement())
  participants ChatParticipants[]
  messages     Message[]
}

model ChatParticipants {
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int

  chat   Chat @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  chatId Int

  @@id([userId, chatId])
}

model Group {
  id           Int                 @id @default(autoincrement())
  name         String
  participants GroupParticipants[]
  messages     Message[]
  creatorId    Int
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
}

model GroupParticipants {
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int

  group   Group @relation(fields: [groupId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  groupId Int

  joinedAt DateTime @default(now())

  @@id([userId, groupId])
}

model Message {
  id   Int    @id @default(autoincrement())
  text String

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int

  chat   Chat? @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  chatId Int?

  group   Group? @relation(fields: [groupId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  groupId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
